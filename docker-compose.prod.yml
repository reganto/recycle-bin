version: '3.9'

services:
    web:
        container_name: recycle_web
        image: recycle
        build:
            context: .
            dockerfile: Dockerfile.prod 
        ports:
            - "8000:8000"
        volumes:
            - static-data:/vol/web
        depends_on:
            - db
        environment:
            - SECRET_KEY=askdfkaskdfj34ek3kjkjskfjsdioij
            - DEBUG=0
            # - DEBUG=1
            - DB_NAME=mydb
            - DB_HOST=db
            - DB_PORT=5432
            - DB_USER=postgres
            - DB_PASSWORD=""
            - ALLOWED_HOSTS=bin.io             
            - DJANGO_ENV=production
            # - DJANGO_ENV=local
        command: wait-for-it --service db:5432 -- gunicorn config.wsgi:application --bind 0.0.0.0:8000 
        # command: wait-for-it --service db:5432 -- python manage.py runserver 0.0.0.0:8000 

    db:
        container_name: recycle_db
        image: postgres
        ports:
            - "5432:5432"
        restart: always
        volumes:
            - postgres-data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=""
            - POSTGRES_DB=mydb
    
    nginx:
        container_name: recycle_nginx
        build:
            context: ./nginx
            dockerfile: Dockerfile
        ports:
            - "1995:80"
        volumes:
            - static-data:/vol/static
        depends_on:
            - web
        restart: "on-failure"

volumes:
    postgres-data:
    static-data:
